version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - NODE_ENV=${NODE_ENV}
        - INSTANCE=${INSTANCE}
        - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
    ports:
      - "172.17.0.1:3000:3000"
    environment:
      - NODE_ENV=${NODE_ENV}
      - INSTANCE=${INSTANCE}
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
    depends_on:
      - backend
    restart: always
    env_file:
      - ./.env

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "172.17.0.1:8000:8000"
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - INSTANCE=${INSTANCE}
      - DATABASE_URL=${DATABASE_URL}
      - CORS_ORIGINS=${CORS_ORIGINS}
      - NODE_ENV=${NODE_ENV}
    depends_on:
      - db
    restart: always
    env_file:
      - ./.env

  db:
    image: postgres:14
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    restart: always
    env_file:
      - ./.env

volumes:
  postgres_data:
