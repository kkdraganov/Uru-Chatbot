services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - ENVIRONMENT=${ENVIRONMENT:-production}
        - INSTANCE=${INSTANCE:-dev}
        - NEXT_PUBLIC_API_URL=https://api.${INSTANCE}.uruenterprises.com/api
    ports:
      - "3000:3000"
    env_file:
      - ./.env
    environment:
      - ENVIRONMENT=${ENVIRONMENT:-production}
      - INSTANCE=${INSTANCE:-dev}
      - NEXT_PUBLIC_API_URL=https://api.${INSTANCE}.uruenterprises.com/api
    depends_on:
      - backend
    restart: always

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - ./.env
    environment:
      - ENVIRONMENT=${ENVIRONMENT:-production}
      - INSTANCE=${INSTANCE:-dev}
      - DATABASE_URL=postgresql+asyncpg://${DB_USER:-postgres}:${DB_PASSWORD:-postgres}@db:5432/${DB_NAME:-uru_chatbot}
      - CORS_ORIGINS=["https://${INSTANCE}.uruenterprises.com","https://api.${INSTANCE}.uruenterprises.com"]
      - SECRET_KEY=${SECRET_KEY:-development_secret_key}
      - MODEL_API_KEY=${MODEL_API_KEY:-your_openai_api_key}
      - AZURE_CLIENT_ID=${AZURE_CLIENT_ID:-your_azure_client_id}
      - AZURE_TENANT_ID=${AZURE_TENANT_ID:-your_azure_tenant_id}
      - AZURE_CLIENT_SECRET=${AZURE_CLIENT_SECRET:-your_azure_client_secret}
      - AZURE_REDIRECT_URI=https://${INSTANCE}.uruenterprises.com/authorize
    depends_on:
      - db
    restart: always

  db:
    image: postgres:14
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env
    environment:
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-postgres}
      - POSTGRES_DB=${DB_NAME:-uru_chatbot}
    restart: always

volumes:
  postgres_data:
  app_data:
