config:
  runTime: "dockerCompose"
  version: ""
  framework: ""
  buildCommand: "docker-compose build"
  buildDir: "/"
  runCommand: "docker-compose up -d"
  icon: ""
  screenshot: ""

environments:
  - key: "INSTANCE"
    value: "[INSTANCE]"
  - key: "SECRET_KEY"
    value: "random_password"
  - key: "DB_USER"
    value: "postgres"
  - key: "DB_PASSWORD"
    value: "random_password"
  - key: "DB_NAME"
    value: "uru_chatbot"
  - key: "NEXT_PUBLIC_API_URL"
    value: "https://api.[INSTANCE].uruenterprises.com/api"
  - key: "CORS_ORIGINS"
    value: ["https://[INSTANCE].uruenterprises.com","https://api.[INSTANCE].uruenterprises.com"]
  - key: "ENVIRONMENT"
    value: "production"

ports:
  - protocol: "HTTPS"
    targetProtocol: "HTTP"
    listeningPort: "443"
    targetPort: "3000"
    targetIP: "172.17.0.1"
    public: true
    path: "/"
    isAuth: false
  - protocol: "HTTPS"
    targetProtocol: "HTTP"
    listeningPort: "8443"
    targetPort: "8000"
    targetIP: "172.17.0.1"
    public: true
    path: "/"
    isAuth: false

lifeCycleConfig:
  preInstallCommand: ""
  postInstallCommand: ""
  preBackupCommand: ""
  postBackupCommand: ""
  preRestoreCommand: ""
  postRestoreCommand: ""
  postDeployCommand: ""

customDomains:
  - hostname: "[INSTANCE].uruenterprises.com"
    service: frontend
    port: 3000
    https: true
  - hostname: "api.[INSTANCE].uruenterprises.com"
    service: backend
    port: 8000
    https: true

webUI:
  - url: "https://[INSTANCE].uruenterprises.com"
    label: "Uru Chatbot Frontend"
  - url: "https://api.[INSTANCE].uruenterprises.com/docs"
    label: "API Documentation"
