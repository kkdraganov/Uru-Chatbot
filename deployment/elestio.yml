app_name: uru-chatbot
instance: ${INSTANCE}
services:
  - name: frontend
    type: web
    tech: nextjs
    domain: ${INSTANCE}.uruenterprises.com
    https: true
    port: 3000
    dockerfile: ./frontend/Dockerfile
    build_args:
      - NEXT_PUBLIC_API_URL=https://api.${INSTANCE}.uruenterprises.com/api
      - INSTANCE=${INSTANCE}
      - NODE_ENV=production
    env:
      - NEXT_PUBLIC_API_URL=https://api.${INSTANCE}.uruenterprises.com/api
      - INSTANCE=${INSTANCE}
      - NODE_ENV=production
    resources:
      cpu: 1
      memory: 1G

  - name: backend
    type: api
    tech: python
    domain: api.${INSTANCE}.uruenterprises.com
    https: true
    port: 8000
    dockerfile: ./backend/Dockerfile
    env:
      - SECRET_KEY=${SECRET_KEY}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - INSTANCE=${INSTANCE}
      - NODE_ENV=production
    resources:
      cpu: 1
      memory: 1G

  - name: db
    type: database
    tech: postgresql
    version: 14
    env:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=uru_chatbot
    resources:
      cpu: 0.5
      memory: 1G
    volumes:
      - data:/var/lib/postgresql/data

env_variables:
  - name: SECRET_KEY
    description: Secret key for JWT token generation
    required: true
    generate: true
    type: string
    length: 32

  - name: POSTGRES_USER
    description: Database username
    required: true
    default: postgres
    type: string

  - name: POSTGRES_PASSWORD
    description: Database password
    required: true
    generate: true
    type: password
    length: 16

  - name: INSTANCE
    description: Instance name for subdomain
    required: true
    type: string

customDomains:
  - hostname: ${INSTANCE}.uruenterprises.com
    service: frontend
    port: 3000
    https: true

  - hostname: api.${INSTANCE}.uruenterprises.com
    service: backend
    port: 8000
    https: true
